jQuery(document).ready(function () {    window.purchasesDT = null;    let dtActionsHTML = '<a href="' + getAppURL('order_purchases/edit/') + '%d" class="btn bt-link btn-sm" title="Edit"><i style="color:#282828;" class="fas fa-edit"></i></a>' +        '<a href="#" data-id="%d"\n' + '                                               data-action="order_purchases/delete"\n' + '                                               class="btn bt-link btn-sm deleteBtn" title="Delete">\n' + '                                                <i class="fas fa-trash"></i>\n' + '                                            </a>' +        '<a href="' + getAppURL('order_purchases/to_purchase/') + '%d" class="btn bt-link btn-sm" title="Add to Order"><i style="color:#282828;" class="fas fa-check-circle" ></i></a>' +        '<a href="#" data-id="%d"\n' + '                                               data-action="order_purchases/duplicate"\n' + '                                               class="btn bt-link btn-sm duplicateBtn" title="Duplicate">\n' + '                                                <i class="fas fa-copy"></i>\n' + '                                            </a>';    let statusHTML = '<input name="status" type="checkbox"id="status" class="input.i-status" onclick="return changeStatus();" %s>';    /***************************************************/    var $dtTbl = $('#orderpurchasesTbl');    //BuildDataTableColumnSearch($dtTbl, 'purchasesDT');    EnhanceDataTableSearch(window.purchasesDT = $dtTbl.DataTable({        orderCellsTop: true, fixedHeader: {headerOffset: 0}, searchDelay: _GST, lengthMenu: _dtLengthMenu,        serverSide: true, processing: true, scrollX: true, scrollY: false, deferLoading: $dtTbl.attr('data-num-rows'),        order: [[0, 'asc']], ajax: {            url: getAppURL('order_purchases/index'), type: 'GET', searchDelay: _GST,            complete: function () {                check_transfered();            }        },        initComplete: function () {            var api = this.api();            api.column(13).visible(false);        },        columns: [{data: 'auto_no'}, {data: 'invoice_related_nb'}, {data: 'trans_date'}, {data: 'value_date'}, {data: 'account1'},            {data: 'account2'}, {data: 'currency_code'}, {data: 'currency_rate'}, {data: 'count'}, {data: 'total'}, {data: 'user_name'}, {data: 'status'}, {data: 'id'}, {data: 'pu_no'}],        columnDefs: [            {                targets: 12,                orderable: false,                createdCell: (td, accId) => $(td).addClass('text-right').html(dtActionsHTML.replace(/%d/g, parseInt(accId)))            },            {                targets: 11,                orderable: false,                createdCell: (td, status) => $(td).addClass('text-right').html(statusHTML.replace(/%s/g, status_check(status)))            },            {targets: 2, render: $.fn.dataTable.render.moment('YYYY-MM-DD', 'DD-MM-YYYY')},            {targets: 3, render: $.fn.dataTable.render.moment('YYYY-MM-DD', 'DD-MM-YYYY')}        ],        /*  pagingType: "input",*/          stateSave: true,        stateSaveCallback: function (settings, data) {            localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))        },        stateLoadCallback: function (settings) {            return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))        },        "stateSaveParams": function (settings, data) {            var temp = {};            $('#orderpurchasesTbl thead').find("tr:eq(1)").find('input').each(function (n) {                temp[$(this).attr('placeholder')] = document.getElementById($(this).attr('id')).value;            });            data.colsFilter = temp;            // console.log(temp);        },        "stateLoadParams": function (settings, data) {            $.each(data.colsFilter, function (key, val) {                $('#orderpurchasesTbl thead input[placeholder="' + key + '"]').val(val);            });        },        "stateLoaded": function (settings, data) {            $('#orderpurchasesTbl').DataTable().ajax.reload();        }    }), 2048);    $('#reset_filters').on('click', function (e) {        location.reload();    });    check_transfered();});function status_check(status) {    if (parseInt(status) == 1) {        return 'checked';    } else {        return '';    }}function changeStatus() {    let table = $('#orderpurchasesTbl').DataTable();    $('#orderpurchasesTbl tbody').on('click', 'tr', function () {        let rowData = table.row(this).data();        var itemId = rowData.id;        $.ajax({            url: 'order_purchases/change_status', type: 'POST', data: {itemId: itemId}, success: function (response) {                // Handle the response from the server                table.ajax.reload();                window.location.reload();            }        });    });}function check_transfered() {    $("#orderpurchasesTbl tbody tr").each(function () {        var data = $('#orderpurchasesTbl').DataTable().row($(this)).data();        // alert(data['pu_no'])        if (data) {            if (data['pu_no'] !== null) {                $(this).css('background-color', '#d3e3d4');            }        }    });}