let $itemTransferModalForm;let $itemid;let $itemLookup;jQuery(document).ready(function () {    window.warehousesDT = null;    let dtActionsHTML = '<a href="' + getAppURL('opening_items/product_openings/') + '%d" class="btn bt-link btn-sm" title="Opening Item"><i style="color:#505050;" class="fas fa-info"></i></a>' +        '<button type="button" class="btn bt-link btn-sm i-transfer" onclick="openItemModalEdit(%d, \'%s\', \'%n\')">' +        '<i class="fas fa-exchange-alt text-danger"></i>' +        '</button>' +        '<button type="button" class="btn bt-link btn-sm i-adjust" onclick="openAdjustModal(%d, \'%s\', \'%n\', \'%q\', \'%b\', \'%z\')">' +        '<i class="fas fa-adjust text-danger" title="adjust"></i>' +        '</button>' +        '<p id="item_id" class="d-none">%d</p>';    var $dtTbl = $('#warehousesTbl');    BuildDataTableColumnSearch($dtTbl, 'warehousesDT');    EnhanceDataTableSearch(window.warehousesDT = $dtTbl.DataTable({        bDestroy: true,        orderCellsTop: true, fixedHeader: {headerOffset: 0}, searchDelay: _GST, lengthMenu: _dtLengthMenu,        serverSide: true, processing: true, scrollX: false, deferLoading: $dtTbl.attr('data-num-rows'),        order: [[0, 'asc']], ajax: {            url: getAppURL('warehouses/inventory'),            data: function (params) {                let formData = jQuery('#dtAdvFltrs').serializeArray();                for (i in formData) {                    params[formData[i].name] = formData[i].value;                }            },            type: 'GET',            searchDelay: _GST        },        columns: [{data: 'barcode'}, {data: 'EAN'}, {data: 'description'}, {data: 'artical_number'}, {data: 'brand'}, {data: 'alternative'}, {data: 'total_qty'}, {data: 'warehouse'}, {data: 'shelf'}, {data: 'item_id'}],        columnDefs: [            {                targets: 9, orderable: false, createdCell: (td, itemId, row) => {                    $(td).addClass('text-right').html(dtActionsHTML.replace(/%d/g, parseInt(itemId))                        .replace(/%s/g, row.warehouse)                        .replace(/%n/g, row.shelf)                        .replace(/%b/g, row.barcode)                        .replace(/%z/g, row.EAN)                        .replace(/%q/g, row.total_qty));                }            }        ],        /*pagingType: "input",        stateSave: true,        */        stateSaveCallback: function (settings, data) {            localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))        },        stateLoadCallback: function (settings) {            return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))        },        "stateSaveParams": function (settings, data) {            var temp = {};            var adv = {};            $('#warehousesTbl thead').find("tr:eq(1)").find('input').each(function (n) {                // console.log();                if (document.getElementById($(this).attr('id'))) {                    $(this).attr('id', 'input_' + n);                    temp[$(this).attr('placeholder')] = document.getElementById($(this).attr('id')).value;                }            });            adv['adv_filter_shelf'] = $('#filter_shelf').val();            adv['adv_filter_warehouse'] = $('#filter_warehouse').val();            data.colsFilter = temp;            data.advFilter = adv;            data.pagination_page = $('.paginate_input').val();        },        "stateLoadParams": function (settings, data) {            // console.log(data)            $.each(data.colsFilter, function (key, val) {                $('#warehousesTbl thead input[placeholder="' + key + '"]').val(val);            });            // console.log($('.paginate_input').val());            if (data.advFilter !== undefined) {                $('#filter_shelf').val(data.advFilter['adv_filter_shelf']);                $('#filter_warehouse').val(data.advFilter['adv_filter_warehouse']);                // $('#warehousesTbl').DataTable().page(2).draw( 'page' );                // $('.paginate_input').val(data.pagination_page);                      }        },        "stateLoaded": function (settings, data) {            // $('#warehousesTbl').DataTable().ajax.reload();        },        initComplete: function () {            var table = $('#warehousesTbl').DataTable();            table.ajax.reload(null, false);        }    }), 2048);    $itemTransferModalForm = $('div#itemTransferModalForm');    $itemTransferModalForm.modal({show: false});    jQuery('#dtAdvFltrs').attr('onsubmit', '').on('submit', triggerDTFiltersSearch);    $('#adjust').on('click', function (e) {        $('#mvt_type').val(-1);        open_adjust_model();    });    $('#adjust_plus').on('click', function (e) {        $('#mvt_type').val(1);        open_adjust_model();    });    $('#custom_transfer').on('click', function (e) {        var w = $('#filter_warehouse').val();        var s = $('#filter_shelf').val();        // console.log(w);        // console.log(s);        if (w !== 'All' && s != '') {            $.ajax({                cache: false,                type: 'POST',                data: {'warehouse': w, 'shelf': s},                url: getAppURL('warehouses/get_warehouse_id'),                success: function (data) {                    if (data !== null) {                        $('#iModalLabel').text("Adjust: " + w + " - " + s);                        // $('#adj_shelf').val(s);                        $('#TR_warehouse_id').val(data);                        $('div#itemTRModalForm').modal('show');                        autoCompleteTRItem();                    } else {                        alert("The selected warehouse and shelf not found.")                    }                }            });        } else {            alert("Please, select warehouse and shelf.")        }    });    $('#reset_filters').on('click', function (e) {        $('#warehousesTbl thead').find("tr:eq(1)").find('input').each(function (n) {            document.getElementById($(this).attr('id')).value = "";        });        $('#filter_warehouse').val('All');        $('#filter_shelf').val('');        $('#artical_number').val('');        var table = $('#warehousesTbl').DataTable();        table            .search('')            .columns().search('')            .draw();    });    $('#adjustForm').keydown(function (event) {        if (event.keyCode == 13) {            event.preventDefault();            return false;        }    });    $('#adjust_shelf').on('click', function (e) {        var s = $('#filter_shelf').val();        if (s != '') {            $.ajax({                cache: false,                type: 'POST',                data: {'shelf': s},                url: getAppURL('warehouses/get_warehouse_id_by_shelf_only'),                success: function (data) {                    if (data['case'] === 1) {                        $('#confirm_shelf_name').text(s);                        $('#confirm_warehouse_id').val(data['id']);                        $('#confirm_modal').modal('show');                    } else {                        if (data['case'] === null) {                            alert('Shelf Not Found in Any Warehouse!')                        } else {                            if (data['case'] === 'not unique') {                                alert('This Shelf is Not Unique!')                            }                        }                    }                }            });        } else {            alert("Please, Select Shelf.")        }    });    $('#submit_confirm').on('click', function (e) {        $.ajax({            cache: false,            type: 'POST',            data: {'warehouse_id': $('#confirm_warehouse_id').val()},            url: getAppURL('adjusts/clear_shelf'),            success: function (res) {                if (res === '1') {                    window.location.href = getAppURL('warehouses/inventory');                } else {                    alert('Sorry, Something Went Wrong!')                }            }        });    });    $('#alternativesTbl').find('thead tr:nth-child(2)').hide()    // console.log()});function openItemModalEdit(item_id, warehouse, shelf) {    console.log("Button clicked with item_id: " + item_id + ", warehouse: " + warehouse + ", shelf: " + shelf);    $itemid = item_id;    $itemTransferModalForm.modal('show');    let $body = jQuery('div.transfer-body', $itemTransferModalForm);    /*    send ajax request        data: item, warehouse name, shelf        before send: $body.html('<h3>loading</h3>');        success:             replace content fetched from server            jQuery('#btnItemTransferModalForm', $body).on('click', saveItemTransferModalForm);    */    // setTimeout(() => $itemTransferModalForm.modal('hide'), 1000);    $body.html('<h3>loading...</h3>');    $.ajax({        cache: false,        type: 'POST',        data: {'item_id': item_id, 'warehouse': warehouse, 'shelf': shelf},        url: getAppURL('warehouses/get_transfer_view_request'),        success: function (data) {            $body.html(data);            //$("#to").selectpicker();            inputToDatepickerA($('#trans_date', $body));            jQuery('#btnItemTransferModalForm', $body).on('click', saveItemTransferModalForm);        }    });}function saveItemTransferModalForm() {    // alert($itemid);    // send ajax request to save form    if (validate()) {        document.transferform.action = "items/transfer/".concat($itemid);        $("#transferform").submit();    }}function AddItem() {    window.open(getAppURL('items/add?TransAddItem=1'), "_blank");}function validate() {    var count = 0;    var element = document.getElementById("qty");    var min = 0;    var max = parseInt($('#max_qty').val());    var value = parseInt(element.value);    if (value < min || value > max) {        document.getElementById('error_qty').innerHTML = "*Please Enter value less than or equal ".concat(max).concat("*");        document.getElementById('error_qty').className = "alert alert-danger";        count++;    }    var qty = $('#qty').val();    if (qty.trim() == "") {        document.getElementById('error_qty').innerHTML = "*please enter number for qty*";        document.getElementById('error_qty').className = "alert alert-danger";        count++;    }    if (isNaN(qty) == true) {        document.getElementById('error_qty').innerHTML = "*qty must be numeric*";        document.getElementById('error_qty').className = "alert alert-danger";        count++;    } else {        if (Math.sign(qty) == -1) {            document.getElementById('error_qty').innerHTML = "*qty must be positive number*";            document.getElementById('error_qty').className = "alert alert-danger";            count++;        }    }    //var cost = $('#cost').val();    /*if (cost.trim() == "") {        document.getElementById('error_cost').innerHTML = "*please enter number for cost*";        document.getElementById('error_cost').className = "alert alert-danger";        count++;    }    if (isNaN(cost) == true) {        document.getElementById('error_cost').innerHTML = "*cost must be numeric*";        document.getElementById('error_cost').className = "alert alert-danger";        count++;    } else {        if (Math.sign(cost) == -1) {            document.getElementById('error_cost').innerHTML = "*cost must be positive number*";            document.getElementById('error_cost').className = "alert alert-danger";            count++;        }    }*/    if ($('#from').val() == $('#to').val()) {        document.getElementById('error_to').innerHTML = "*please select warehouse-shelf different than from*";        document.getElementById('error_to').className = "alert alert-danger";        count++;    }    var date1 = change_date_format(document.transferform.trans_date.value);    if (document.transferform.trans_date.value == "" || isNaN(date1.getDate())) {        document.getElementById('error_trans_date').innerHTML = "*Please enter a valide date*";        document.getElementById('error_trans_date').className = "alert alert-danger";        count++;    }    if (count > 0) {        return false;    } else {        return true;    }}function change_date_format(date) {    var datearray = date.split("-");    var new_date_format = datearray[1] + "/" + datearray[0] + "/" + datearray[2]    var date_new = new Date(new_date_format);    return date_new;}function triggerDTFiltersSearch(e) {    let formData = jQuery('#dtAdvFltrs').serializeArray();    $.ajax({        cache: false,        type: 'POST',        data: {'warehouse': formData[1].value, 'shelf': formData[2].value},        url: getAppURL('warehouses/calculate_inventory_total_value'),        success: function (data) {            $('#tot').val(data);            // console.log(data);        }    });    window.warehousesDT.ajax.reload();    e.preventDefault();    e.stopPropagation();    return false;}$('#filter_warehouse').change(function (e) {    var getselected = $('#filter_warehouse').children("option:selected").text();    $.ajax({        cache: false,        type: 'POST',        data: {'whatselected': getselected},        url: getAppURL('purchases/get_warehouse_shelfs'),        success: function (data) {            $('#filter_shelf').val('');            var options = '';            for (var i = 0; i < data.length; i++) {                options += '<option value="' + data[i] + '" />';            }            document.getElementById('shelfs').innerHTML = options;        }    });});function openAdjustModal(item_id, warehouse, shelf, qty, barcode, ean) {    $itemAdjustModalForm = $('#rowAdjustModalForm');    $('#row_adjust_product_data').text(barcode.concat(' - ').concat(ean).concat(' - ').concat(warehouse).concat(' - ').concat(shelf));    $('#row_old_qty').val(qty);    $('#row_adjust_item_id').val(item_id);    $('#row_adjust_warehouse').val(warehouse);    $('#row_adjust_shelf').val(shelf);    $('#row_new_qty').val(0);    $itemAdjustModalForm.modal('show');}function autoCompleteItem() {    $itemLookup = $('#select_adj_item');    $itemLookup.on('keydown', function (e) {        if (e.keyCode == 13) {            // do not submit form on press of return key            e.preventDefault();            e.stopPropagation();            e.stopImmediatePropagation();            return false;        }    }).autocomplete({        serviceUrl: getAppURL('items/lookup_items_by_EAN_and_artical_nb'),        appendTo: $itemLookup.parent()[0],        noCache: true,        showNoSuggestionNotice: true,        triggerSelectOnValidInput: false,        minChars: 2,        autoSelectFirst: true,        preventBadQueries: false,        noSuggestionNotice: 'Sorry, no matching results',        type: 'GET',        dataType: 'JSON',        deferRequestBy: 480,        onSearchStart: function (params) {        },        onSelect: function (result) {            addLineToTransaction(result.row, true);        },        transformResult: function (response) {            if (response.length === 1) {                if (response[0]['artical_number'] === $itemLookup.val() || response[0]['EAN'] === $itemLookup.val()) {                    $itemLookup.autocomplete('clear');                    addLineToTransaction(response[0], true);                }            }            return {                suggestions: jQuery.map(response, function (item) {                    return {value: item.suggestion, row: item};                })            };        }    });}function addLineToTransaction(item, newLine) {    $transactionLines = $('#adj_table tbody');    var flag = '';    jQuery('tr', $transactionLines).each(function (i, tr) {        var id = jQuery('input.i-item_id', tr).val();        if (item.id === id) {            flag = $(this).attr('id');            // console.log($(this).data('index'));        }    });    if (flag === '') {        let $lastTr = jQuery('tr:last', $transactionLines);        let idx = 1 + parseInt($lastTr.length > 0 ? $lastTr.attr('data-index') : -1);        $transactionLines.append(ItemLineTpl.replace(/%d/g, String(idx)));        if (newLine) {            var currency_rate = $('#currency_rate').val();            var $tr = jQuery('tr#item-' + idx, $transactionLines);            jQuery('input.i-item_id', $tr).val(item.id);            jQuery('td.i-name', $tr).text(item.description);            jQuery('td.i-brand', $tr).text(item.brand);            jQuery('td.i-artical_number', $tr).text(item.artical_number);            jQuery('input.i-qty', $tr).val('1');        }    } else {        var qty = parseInt($('#' + flag).find('input.i-qty').val()) + 1;        $('#' + flag).find('input.i-qty').val(qty);    }    $itemLookup.val('');    bindLineEvents($tr);}function bindLineEvents($tr) {    jQuery('button.i-remove', $tr).on('click', function () {        jQuery(this.parentNode.parentNode).remove();    });}function adj_validation() {    var count = 0;    jQuery('tr', $('#adj_table tbody')).each(function (i, tr) {        var qty = jQuery('input.i-qty', tr).val();        if (isNaN(qty) == true) {            document.getElementById('error_transactionadjLines').innerHTML = "*qty must be numeric*";            document.getElementById('error_transactionadjLines').className = "alert alert-danger";            count++;        } else {            if (parseInt(qty) <= 0) {                document.getElementById('error_transactionadjLines').innerHTML = "*qty must be positive number*";                document.getElementById('error_transactionadjLines').className = "alert alert-danger";                count++;            }        }        if (qty.trim() == "") {            document.getElementById('error_transactionadjLines').innerHTML = "*qty fields must be numeric*";            document.getElementById('error_transactionadjLines').className = "alert alert-danger";            count++;        }    });    if (document.getElementById('transactionadjLines').rows.length == "0") {        document.getElementById('error_transactionadjLines').innerHTML = "*Please enter an item*";        document.getElementById('error_transactionadjLines').className = "alert alert-danger";        count++;    }    if (count > 0) {        return false;    } else {        return true;    }}function autoCompleteTRItem() {    $itemLookup = $('#select_TR_item');    $itemLookup.on('keydown', function (e) {        if (e.keyCode == 13) {            // do not submit form on press of return key            e.preventDefault();            e.stopPropagation();            e.stopImmediatePropagation();            return false;        }    }).autocomplete({        serviceUrl: getAppURL('items/lookup_items_by_EAN_and_artical_nb'),        appendTo: $itemLookup.parent()[0],        noCache: true,        showNoSuggestionNotice: true,        triggerSelectOnValidInput: false,        minChars: 2,        autoSelectFirst: true,        preventBadQueries: false,        noSuggestionNotice: 'Sorry, no matching results',        type: 'GET',        dataType: 'JSON',        deferRequestBy: 480,        onSearchStart: function (params) {        },        onSelect: function (result) {            addTRLineToTransaction(result.row, true);        },        transformResult: function (response) {            return {                suggestions: jQuery.map(response, function (item) {                    return {value: item.suggestion, row: item};                })            };        }    });}function addTRLineToTransaction(item, newLine) {    $transactionLines = $('#TR_table tbody');    var flag = '';    jQuery('tr', $transactionLines).each(function (i, tr) {        var id = jQuery('input.i-item_id', tr).val();        if (item.id === id) {            flag = $(this).attr('id');        }    });    if (flag === '') {        $itemLookup.val('');        let $lastTr = jQuery('tr:last', $transactionLines);        let idx = 1 + parseInt($lastTr.length > 0 ? $lastTr.attr('data-index') : -1);        $transactionLines.append(ItemLineTRTpl.replace(/%d/g, String(idx)));        if (newLine) {            var currency_rate = $('#currency_rate').val();            var $tr = jQuery('tr#item-' + idx, $transactionLines);            jQuery('input.i-item_id', $tr).val(item.id);            jQuery('td.i-name', $tr).text(item.description);            jQuery('td.i-brand', $tr).text(item.brand);            jQuery('td.i-artical_number', $tr).text(item.artical_number);            jQuery('td.i-warehouse_from', $tr).text("5314 - 20-IN");            var w = $('#filter_warehouse').val();            var s = $('#filter_shelf').val();            jQuery('td.i-warehouse_to', $tr).text(w + " - " + s);            jQuery('input.i-qty', $tr).val('1').focus();        }    } else {        var qty = parseInt($('#' + flag).find('input.i-qty').val()) + 1;        $('#' + flag).find('input.i-qty').val(qty);    }    bindLineTREvents($tr);}function bindLineTREvents($tr) {    jQuery('button.i-remove', $tr).on('click', function () {        jQuery(this.parentNode.parentNode).remove();    });}function TR_validation() {    var count = 0;    jQuery('tr', $('#TR_table tbody')).each(function (i, tr) {        var qty = jQuery('input.i-qty', tr).val();        if (isNaN(qty) == true) {            document.getElementById('error_transactiontrLines').innerHTML = "*qty must be numeric*";            document.getElementById('error_transactiontrLines').className = "alert alert-danger";            count++;        } else {            if (parseInt(qty) <= 0) {                document.getElementById('error_transactiontrLines').innerHTML = "*qty must be positive numbers*";                document.getElementById('error_transactiontrLines').className = "alert alert-danger";                count++;            }        }        if (qty.trim() == "") {            document.getElementById('error_transactiontrLines').innerHTML = "*qty fields must be numeric*";            document.getElementById('error_transactiontrLines').className = "alert alert-danger";            count++;        }    });    if (document.getElementById('transactiontrLines').rows.length == "0") {        document.getElementById('error_transactiontrLines').innerHTML = "*Please enter an item*";        document.getElementById('error_transactiontrLines').className = "alert alert-danger";        count++;    }    if (count > 0) {        return false;    } else {        return true;    }}function open_adjust_model() {    // var w = $('#filter_warehouse').val();    var s = $('#filter_shelf').val();    if (s != '') {        $.ajax({            cache: false,            type: 'POST',            data: {'shelf': s},            url: getAppURL('warehouses/get_warehouse_id_by_shelf_only'),            success: function (data) {                if (data['case'] === 1) {                    $('#adj_table thead tr').eq(1).remove();                    $('#iModalLabel').text("Adjust: " + data['warehouse'] + " - " + s);                    $('#adj_warehouse_id').val(data['id']);                    $('div#itemAdjustModalForm').modal('show');                    autoCompleteItem();                } else {                    if (data['case'] === null) {                        alert('Shelf Not Found in Any Warehouse!')                    } else {                        if (data['case'] === 'not unique') {                            alert('This Shelf is Not Unique!')                        }                    }                }            }        });    } else {        alert("Please, Select Shelf.")    }}function rowadjustvalidate() {    var count = 0;    var qty = $('#row_new_qty').val();    if (qty.trim() == "") {        document.getElementById('error_row_adjust_old_qty').innerHTML = "*This field is required*";        document.getElementById('error_row_adjust_old_qty').className = "alert alert-danger";        count++;    }    if (isNaN(qty) == true) {        document.getElementById('error_row_adjust_old_qty').innerHTML = "*It must be numeric*";        document.getElementById('error_row_adjust_old_qty').className = "alert alert-danger";        count++;    } else {        if (Math.sign(qty) == -1) {            document.getElementById('error_row_adjust_old_qty').innerHTML = "*It must be positive*";            document.getElementById('error_row_adjust_old_qty').className = "alert alert-danger";            count++;        }    }    var old_qty = $('#row_old_qty').val();    if (old_qty === qty) {        document.getElementById('error_row_adjust_old_qty').innerHTML = "new qty can not be equal to old qty!";        document.getElementById('error_row_adjust_old_qty').className = "alert alert-danger";        count++;    }    if (count > 0) {        return false;    } else {        return true;    }}