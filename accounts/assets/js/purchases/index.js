jQuery(document).ready(function () {	window.purchasesDT = null;	let dtActionsHTML = '<a href="' + getAppURL('purchases/edit/') + '%d" class="btn bt-link btn-sm" title="Edit"><i style="color:#282828;" class="fas fa-edit"></i></a>' +		'<a href="#" data-id="%d"\n' + '                                               data-action="purchases/delete"\n' + '                                               class="btn bt-link btn-sm deleteBtn" title="Delete">\n' + '                                                <i class="fas fa-trash"></i>\n' + '                                            </a>' +		'<a href="' + getAppURL('purchases/check/') + '%d" class="btn bt-link btn-sm" title="Edit"><i style="color:#282828;" class="fas fa-check-circle"></i></a>';	let statusHTML = '<input name="status" type="checkbox"id="status" class="input.i-status" onclick="return changeStatus();" %s>';	/***************************************************/	//setTimeout(getAllStatusTdCells, 100);	var $dtTbl = $('#purchasesTbl');	//BuildDataTableColumnSearch($dtTbl, 'purchasesDT');	EnhanceDataTableSearch(window.purchasesDT = $dtTbl.DataTable({		orderCellsTop: true, fixedHeader: { headerOffset: 0 }, searchDelay: _GST, lengthMenu: _dtLengthMenu,		serverSide: true, processing: true, scrollX: true, scrollY: false, deferLoading: $dtTbl.attr('data-num-rows'),		order: [[0, 'asc']], ajax: { url: getAppURL('purchases/index'), type: 'GET', searchDelay: _GST },		columns: [{ data: 'auto_no' }, { data: 'invoice_related_nb' }, { data: 'trans_date' }, { data: 'value_date' }, { data: 'account1' },		{ data: 'account2' }, { data: 'currency_code' }, { data: 'currency_rate' }, { data: 'count' }, { data: 'total' }, { data: 'user_name' }, { data: 'status' }, { data: 'id' }],		columnDefs: [			{ targets: 12, orderable: false, createdCell: (td, accId) => $(td).addClass('text-right').html(dtActionsHTML.replace(/%d/g, parseInt(accId))) },			{ targets: 11, orderable: false, createdCell: (td, status) => $(td).addClass('text-right').html(statusHTML.replace(/%s/g, status_check(status))) },			{targets: 2, render: $.fn.dataTable.render.moment('YYYY-MM-DD','DD-MM-YYYY')},			{targets: 3, render: $.fn.dataTable.render.moment('YYYY-MM-DD','DD-MM-YYYY')}		],		/*pagingType: "input",*/		stateSave: true,		stateSaveCallback: function (settings, data) {			localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))		},		stateLoadCallback: function (settings) {			return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))		},		"stateSaveParams": function (settings, data) {			var temp = {};			$('#purchasesTbl thead').find("tr:eq(1)").find('input').each(function (n) {				temp[$(this).attr('placeholder')] = document.getElementById($(this).attr('id')).value;			});					data.colsFilter = temp;			console.log(temp);		},		"stateLoadParams": function (settings, data) {			$.each(data.colsFilter, function (key, val) {				$('#purchasesTbl thead input[placeholder="' + key + '"]').val(val);			});		},		"stateLoaded": function (settings, data) {			$('#purchasesTbl').DataTable().ajax.reload();		}	}), 2048);	$('#reset_filters').on('click', function (e) {		location.reload();	});});function getAllStatusTdCells() {	const table = document.getElementById('purchasesTbl');	const rows = table.getElementsByTagName('tr');	for (let i = 0; i < rows.length; i++) {		const cells = rows[i].getElementsByTagName('td');		if (cells[11]) {			const statusOnTable = cells[11].innerHTML;			const checkbox = document.createElement('input');			checkbox.type = 'checkbox';			checkbox.name = 'status';			checkbox.onclick = function () {				const itemId = cells[11].getAttribute('data-id');				if (parseInt(itemId)) {					changeStatusList(itemId);				}			};			if (parseInt(statusOnTable) === 1) {				checkbox.checked = true;			} else if (parseInt(statusOnTable) === 0) {				checkbox.checked = false;			} else {				checkbox.checked = false;			}			cells[11].textContent = '';			cells[11].appendChild(checkbox);		} else {			console.log('not  found!');		}	}}function changeStatusList(itemId) {	var itemId = itemId;	$.ajax({		url: 'purchases/change_status', type: 'POST', data: {itemId: itemId}, success: function (response) {			// Handle the response from the server			window.location.reload();		}	});}function status_check(status) {	if (parseInt(status) == 1) {		return 'checked';	} else {		return '';	}}function changeStatus() {	let table = $('#purchasesTbl').DataTable();	$('#purchasesTbl tbody').on('click', 'tr', function () {		let rowData = table.row(this).data();		var itemId = rowData.id;		$.ajax({			url: 'purchases/change_status',			type: 'POST',			data: {itemId: itemId},			success: function (response) {				// Handle the response from the server				table.ajax.reload();				window.location.reload();			}		});	});}